<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>BookStore</display-name>
    <context-param>
        <param-name>PictureLocation</param-name>
        <param-value>H:\MyProject\PictiureLocation</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <!-- 自定义listener 主要获得Web 的上下文 -->
    <listener>
        <listener-class>site.luoyu.listner.WebContextListener</listener-class>
    </listener>
    <!--这个listener是用来加载 applicationContext.xml配置文件的 上述配置文件是用来写bean的-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- bean 的 web作用域 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <!-- 编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 自己写的一个跨域允许过滤器 -->
    <filter>
        <filter-name>AllorOrigin</filter-name>
        <filter-class>site.luoyu.filter.ServiceFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AllorOrigin</filter-name>
        <url-pattern>/BookStore/*</url-pattern>
    </filter-mapping>
    <!-- spring dispatcher 配置 -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
