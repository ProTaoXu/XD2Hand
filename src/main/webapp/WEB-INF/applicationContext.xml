<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

       <!-- sql 异常转换 将传统的sql异常转换为-->
       <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

       <!-- jpa repository 这个是需要生成jpa代理(可能是用的cglib)的路径-->
       <jpa:repositories
               base-package="site.luoyu.dao"
               repository-impl-postfix="Repository"
               entity-manager-factory-ref="entityManagerFactory"
               transaction-manager-ref="transactionManager">
       </jpa:repositories>

       <!-- 数据库连接参数配置文件的位置 resources MySql.properties -->
       <!--<context:property-placeholder location="classpath:MySql.properties" ignore-unresolvable="true" />-->
       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath*:MySql.properties</value>
                            <value>classpath*:ProjectConfig.properties</value>
                     </list>
              </property>
       </bean>

       <!-- service包 -->
       <!--<context:component-scan base-package="your service package" />-->
       <!-- 使用cglib进行动态代理 hibernate 利用cglib进行动态代理的生成。延缓数据访问 -->
       <aop:aspectj-autoproxy proxy-target-class="true" />
       <!-- 支持注解方式声明式事务 -->
       <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

       <!-- 实体管理器 -->
       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
              <property name="dataSource" ref="dataSource" />
              <!-- 实体的位置 -->
              <property name="packagesToScan" value="site.luoyu.dao" />
              <!-- 持久化提供 这里是hibernate  -->
              <property name="persistenceProvider">
                     <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
              </property>
              <!-- 设置JPA实现厂商的特定属性 -->
              <property name="jpaVendorAdapter">
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                            <property name="generateDdl" value="false" />
                            <property name="database" value="MYSQL" />
                            <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                            <!-- <property name="showSql" value="true" /> -->
                     </bean>
              </property>
              <!-- jpa 方言支持 -->
              <property name="jpaDialect">
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
              </property>
              <property name="jpaPropertyMap">
                     <map>
                            <entry key="hibernate.query.substitutions" value="true 1, false 0" />
                            <entry key="hibernate.default_batch_fetch_size" value="16" />
                            <entry key="hibernate.max_fetch_depth" value="2" />
                            <entry key="hibernate.generate_statistics" value="true" />
                            <entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
                            <entry key="hibernate.cache.use_second_level_cache" value="false" />
                            <entry key="hibernate.cache.use_query_cache" value="false" />
                     </map>
              </property>
       </bean>

       <!-- 事务管理器 -->
       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="entityManagerFactory"/>
       </bean>

       <!-- c3p0 数据源 支持数据缓存 -->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
              <property name="driverClass" value="${driverClass}" />
              <property name="jdbcUrl" value="${jdbcUrl}" />
              <property name="user" value="${user}" />
              <property name="password" value="${password}" />
              <property name="initialPoolSize" value="${initialPoolSize}"/>
              <property name="minPoolSize" value="${minPoolSize}"/>
              <property name="maxPoolSize" value="${maxPoolSize}"/>
              <property name="maxIdleTime" value="${maxIdleTime}"/>
              <property name="acquireIncrement" value="${acquireIncrement}"/>
              <property name="maxStatements" value="${maxStatements}"/>
       </bean>

       <!-- 事务 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <tx:method name="*" />
                     <tx:method name="get*" read-only="true" />
                     <tx:method name="find*" read-only="true" />
                     <tx:method name="select*" read-only="true" />
                     <tx:method name="delete*" propagation="REQUIRED" />
                     <tx:method name="update*" propagation="REQUIRED" />
                     <tx:method name="add*" propagation="REQUIRED" />
                     <tx:method name="insert*" propagation="REQUIRED" />
              </tx:attributes>
       </tx:advice>

       <!-- 事务切面配置 -->
       <aop:config>
              <aop:pointcut id="allServiceMethod" expression="execution(* site.luoyu.service.*.*(..))" />
              <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
       </aop:config>

</beans>